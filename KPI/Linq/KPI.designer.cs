#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace KPI.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KPI")]
	public partial class KPIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void Insert員工(員工 instance);
    partial void Update員工(員工 instance);
    partial void Delete員工(員工 instance);
    partial void Insert職務代理人(職務代理人 instance);
    partial void Update職務代理人(職務代理人 instance);
    partial void Delete職務代理人(職務代理人 instance);
    partial void Insert帳號(帳號 instance);
    partial void Update帳號(帳號 instance);
    partial void Delete帳號(帳號 instance);
    #endregion
		
		public KPIDataContext() : 
				base(global::KPI.Properties.Settings.Default.KPIConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KPIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KPIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KPIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KPIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<員工> 員工
		{
			get
			{
				return this.GetTable<員工>();
			}
		}
		
		public System.Data.Linq.Table<職務代理人> 職務代理人
		{
			get
			{
				return this.GetTable<職務代理人>();
			}
		}
		
		public System.Data.Linq.Table<帳號> 帳號
		{
			get
			{
				return this.GetTable<帳號>();
			}
		}
		
		public System.Data.Linq.Table<部門> 部門
		{
			get
			{
				return this.GetTable<部門>();
			}
		}
		
		public System.Data.Linq.Table<腳色> 腳色
		{
			get
			{
				return this.GetTable<腳色>();
			}
		}
		
		public System.Data.Linq.Table<腳色明細> 腳色明細
		{
			get
			{
				return this.GetTable<腳色明細>();
			}
		}
		
		public System.Data.Linq.Table<職位> 職位
		{
			get
			{
				return this.GetTable<職位>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.員工")]
	public partial class 員工 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SYSID;
		
		private string _代號;
		
		private string _名稱;
		
		private bool _在職;
		
		private string _部門;
		
		private string _職位;
		
		private string _腳色;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSYSIDChanging(string value);
    partial void OnSYSIDChanged();
    partial void On代號Changing(string value);
    partial void On代號Changed();
    partial void On名稱Changing(string value);
    partial void On名稱Changed();
    partial void On在職Changing(bool value);
    partial void On在職Changed();
    partial void On部門Changing(string value);
    partial void On部門Changed();
    partial void On職位Changing(string value);
    partial void On職位Changed();
    partial void On腳色Changing(string value);
    partial void On腳色Changed();
    #endregion
		
		public 員工()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SYSID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SYSID
		{
			get
			{
				return this._SYSID;
			}
			set
			{
				if ((this._SYSID != value))
				{
					this.OnSYSIDChanging(value);
					this.SendPropertyChanging();
					this._SYSID = value;
					this.SendPropertyChanged("SYSID");
					this.OnSYSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_代號", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 代號
		{
			get
			{
				return this._代號;
			}
			set
			{
				if ((this._代號 != value))
				{
					this.On代號Changing(value);
					this.SendPropertyChanging();
					this._代號 = value;
					this.SendPropertyChanged("代號");
					this.On代號Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_名稱", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 名稱
		{
			get
			{
				return this._名稱;
			}
			set
			{
				if ((this._名稱 != value))
				{
					this.On名稱Changing(value);
					this.SendPropertyChanging();
					this._名稱 = value;
					this.SendPropertyChanged("名稱");
					this.On名稱Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_在職", DbType="Bit NOT NULL")]
		public bool 在職
		{
			get
			{
				return this._在職;
			}
			set
			{
				if ((this._在職 != value))
				{
					this.On在職Changing(value);
					this.SendPropertyChanging();
					this._在職 = value;
					this.SendPropertyChanged("在職");
					this.On在職Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_部門", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 部門
		{
			get
			{
				return this._部門;
			}
			set
			{
				if ((this._部門 != value))
				{
					this.On部門Changing(value);
					this.SendPropertyChanging();
					this._部門 = value;
					this.SendPropertyChanged("部門");
					this.On部門Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_職位", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 職位
		{
			get
			{
				return this._職位;
			}
			set
			{
				if ((this._職位 != value))
				{
					this.On職位Changing(value);
					this.SendPropertyChanging();
					this._職位 = value;
					this.SendPropertyChanged("職位");
					this.On職位Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_腳色", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 腳色
		{
			get
			{
				return this._腳色;
			}
			set
			{
				if ((this._腳色 != value))
				{
					this.On腳色Changing(value);
					this.SendPropertyChanging();
					this._腳色 = value;
					this.SendPropertyChanged("腳色");
					this.On腳色Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.職務代理人")]
	public partial class 職務代理人 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SYSID;
		
		private string _職務代理人1;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSYSIDChanging(string value);
    partial void OnSYSIDChanged();
    partial void On職務代理人1Changing(string value);
    partial void On職務代理人1Changed();
    #endregion
		
		public 職務代理人()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SYSID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SYSID
		{
			get
			{
				return this._SYSID;
			}
			set
			{
				if ((this._SYSID != value))
				{
					this.OnSYSIDChanging(value);
					this.SendPropertyChanging();
					this._SYSID = value;
					this.SendPropertyChanged("SYSID");
					this.OnSYSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="職務代理人", Storage="_職務代理人1", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string 職務代理人1
		{
			get
			{
				return this._職務代理人1;
			}
			set
			{
				if ((this._職務代理人1 != value))
				{
					this.On職務代理人1Changing(value);
					this.SendPropertyChanging();
					this._職務代理人1 = value;
					this.SendPropertyChanged("職務代理人1");
					this.On職務代理人1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.帳號")]
	public partial class 帳號 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _密碼;
		
		private string _啟用;
		
		private string _腳色;
		
		private string _SYSID;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On密碼Changing(string value);
    partial void On密碼Changed();
    partial void On啟用Changing(string value);
    partial void On啟用Changed();
    partial void On腳色Changing(string value);
    partial void On腳色Changed();
    partial void OnSYSIDChanging(string value);
    partial void OnSYSIDChanged();
    #endregion
		
		public 帳號()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_密碼", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 密碼
		{
			get
			{
				return this._密碼;
			}
			set
			{
				if ((this._密碼 != value))
				{
					this.On密碼Changing(value);
					this.SendPropertyChanging();
					this._密碼 = value;
					this.SendPropertyChanged("密碼");
					this.On密碼Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_啟用", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 啟用
		{
			get
			{
				return this._啟用;
			}
			set
			{
				if ((this._啟用 != value))
				{
					this.On啟用Changing(value);
					this.SendPropertyChanging();
					this._啟用 = value;
					this.SendPropertyChanged("啟用");
					this.On啟用Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_腳色", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 腳色
		{
			get
			{
				return this._腳色;
			}
			set
			{
				if ((this._腳色 != value))
				{
					this.On腳色Changing(value);
					this.SendPropertyChanging();
					this._腳色 = value;
					this.SendPropertyChanged("腳色");
					this.On腳色Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SYSID", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SYSID
		{
			get
			{
				return this._SYSID;
			}
			set
			{
				if ((this._SYSID != value))
				{
					this.OnSYSIDChanging(value);
					this.SendPropertyChanging();
					this._SYSID = value;
					this.SendPropertyChanged("SYSID");
					this.OnSYSIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.部門")]
	public partial class 部門
	{
		
		private string _代號;
		
		private string _名稱;
		
		public 部門()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_代號", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 代號
		{
			get
			{
				return this._代號;
			}
			set
			{
				if ((this._代號 != value))
				{
					this._代號 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_名稱", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 名稱
		{
			get
			{
				return this._名稱;
			}
			set
			{
				if ((this._名稱 != value))
				{
					this._名稱 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.腳色")]
	public partial class 腳色
	{
		
		private string _代號;
		
		private string _名稱;
		
		public 腳色()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_代號", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 代號
		{
			get
			{
				return this._代號;
			}
			set
			{
				if ((this._代號 != value))
				{
					this._代號 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_名稱", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 名稱
		{
			get
			{
				return this._名稱;
			}
			set
			{
				if ((this._名稱 != value))
				{
					this._名稱 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.腳色明細")]
	public partial class 腳色明細
	{
		
		private string _代號;
		
		private string _畫面;
		
		private string _功能;
		
		private bool _啟用;
		
		public 腳色明細()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_代號", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 代號
		{
			get
			{
				return this._代號;
			}
			set
			{
				if ((this._代號 != value))
				{
					this._代號 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_畫面", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 畫面
		{
			get
			{
				return this._畫面;
			}
			set
			{
				if ((this._畫面 != value))
				{
					this._畫面 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_功能", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 功能
		{
			get
			{
				return this._功能;
			}
			set
			{
				if ((this._功能 != value))
				{
					this._功能 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_啟用", DbType="Bit NOT NULL")]
		public bool 啟用
		{
			get
			{
				return this._啟用;
			}
			set
			{
				if ((this._啟用 != value))
				{
					this._啟用 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.職位")]
	public partial class 職位
	{
		
		private string _代號;
		
		private string _名稱;
		
		public 職位()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_代號", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 代號
		{
			get
			{
				return this._代號;
			}
			set
			{
				if ((this._代號 != value))
				{
					this._代號 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_名稱", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string 名稱
		{
			get
			{
				return this._名稱;
			}
			set
			{
				if ((this._名稱 != value))
				{
					this._名稱 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
